{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","particleArt/Particle.js","Title.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","Particle","x","y","ctx","mouse","this","size","baseX","baseY","density","Math","random","rand","fillStyle","beginPath","arc","PI","closePath","fill","dx","dy","distance","sqrt","forceDirectionX","forceDirectionY","maxDistance","radius","force","directionX","directionY","Title","props","canvasRef","useRef","useEffect","canvas","current","getContext","width","window","innerWidth","particleArray","addEventListener","event","font","fillText","word","textCoordinates","getImageData","pushParticle","positionX","positionY","y2","height","x2","data","init","animate","randomDistance","clearRect","particle","draw","update","requestAnimationFrame","ref","id"],"mappings":"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","file":"static/js/3.b94d60b7.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export class Particle {\r\n    constructor(x, y, ctx, mouse) {\r\n        this.x = x;\r\n        this.y = y;\r\n\r\n        this.ctx = ctx;\r\n        this.mouse = mouse;\r\n\r\n        this.size = 1.5;\r\n        this.baseX = this.x;\r\n        this.baseY = this.y;\r\n        this.density = (Math.random() * 30) +1;\r\n    }\r\n    draw(rand) {\r\n        this.ctx.fillStyle = 'black';\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(\r\n            this.x + Math.random() * rand,\r\n            this.y,\r\n            this.size, 0, Math.PI * 2\r\n            );\r\n        this.ctx.closePath();\r\n        this.ctx.fill()\r\n    }\r\n    update() {\r\n        let dx = this.mouse.x - this.x;\r\n        let dy = this.mouse.y - this.y;\r\n\r\n        let distance = Math.sqrt(dx*dx + dy*dy);\r\n        let forceDirectionX = dx/distance;\r\n        let forceDirectionY = dy/distance;\r\n        let maxDistance = this.mouse.radius;\r\n        let force = (maxDistance - distance) / maxDistance;\r\n        let directionX = forceDirectionX * force * this.density;\r\n        let directionY = forceDirectionY * force * this.density;\r\n        \r\n        if (distance < this.mouse.radius) {\r\n            this.x -= directionX;\r\n            this.y -= directionY;\r\n        } else {\r\n            if (this.x !== this.baseX) {\r\n                let dx = this.x - this.baseX;\r\n                this.x -= dx/10;\r\n            }\r\n            if (this.y !== this.baseY) {\r\n                let dy = this.y - this.baseY;\r\n                this.y -= dy/10;\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\n\r\nimport { Particle } from './particleArt/Particle'\r\n\r\nconst Title = (props) => {\r\n    const canvasRef = useRef(null)\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current\r\n        const ctx = canvas.getContext('2d')\r\n        canvas.width = 140;\r\n        canvas.width = window.innerWidth;\r\n\r\n        let particleArray = [];    \r\n        let xAdjust = 0;\r\n        let yAdjust = 0;\r\n    \r\n        const mouse = {\r\n            x: null,\r\n            y: null,\r\n            radius: 40,\r\n        }\r\n        window.addEventListener('mousemove', function(event){\r\n            // +10 and -60 is there to resolve a weird displacement that happens\r\n            // because the canvas isn't absolutely positioned\r\n            mouse.x = event.x +10;\r\n            mouse.y = event.y -60;\r\n        })\r\n        ctx.fillStyle = 'black';\r\n        ctx.font = `bold ${window.innerWidth /100 + 16}px Courier New`;\r\n        ctx.fillText(props.word, window.innerWidth * 0.12, 28);\r\n        const textCoordinates = ctx.getImageData(0, 0, window.innerWidth, 35);\r\n\r\n        function pushParticle (positionX, positionY) {\r\n            particleArray.push(new Particle(\r\n                positionX * 3,\r\n                positionY * 3,\r\n                ctx,\r\n                mouse\r\n            ))\r\n        }\r\n        function init() {\r\n            particleArray = [];\r\n            for (let y = 0, y2 = textCoordinates.height; y < y2; y++) {\r\n                for (let x = 0, x2 = textCoordinates.width; x < x2; x++) {\r\n                    if (textCoordinates.data[(y * 4 * textCoordinates.width) + (x * 4) + 3] > 128) { //skip elements so that only the opacity is chaced within the array. Too complicated, but it speeds up the program a lot.\r\n                        let positionX = x + xAdjust;\r\n                        let positionY = y + yAdjust;\r\n                        pushParticle(positionX, positionY)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        init();\r\n        \r\n        function animate(randomDistance) {\r\n\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            for (let particle of particleArray){\r\n                particle.draw(randomDistance);\r\n                particle.update();\r\n            }\r\n            if (randomDistance === 0) {\r\n                requestAnimationFrame(() => animate(randomDistance));\r\n            } else {\r\n            requestAnimationFrame(() => animate(randomDistance-1));\r\n            }\r\n        }\r\n        animate(30);\r\n    }, [props.word])\r\n\r\n    return <canvas ref={canvasRef} {...props} id=\"nameCanvas\"></canvas>\r\n    }\r\n\r\nexport default Title"],"sourceRoot":""}